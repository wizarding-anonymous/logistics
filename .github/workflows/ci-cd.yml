name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install backend dependencies and linters
        working-directory: ./apps/backend/services/orders
        run: |
          pip install -r requirements.txt
          pip install ruff

      - name: Lint backend (Python)
        working-directory: ./apps/backend/services/orders
        run: ruff check .

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: apps/frontend/web/package-lock.json

      - name: Install frontend dependencies
        working-directory: ./apps/frontend/web
        run: npm ci

      - name: Lint frontend (TypeScript)
        working-directory: ./apps/frontend/web
        run: npm run lint

  test:
    name: Run Tests
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install backend dependencies for testing
        working-directory: ./apps/backend/services/orders
        run: pip install -r requirements.txt && pip install pytest

      - name: Run backend tests (Placeholder)
        working-directory: ./apps/backend/services/orders
        run: echo "pytest tests/ --ignore=tests/e2e" # Placeholder

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: apps/frontend/web/package-lock.json

      - name: Install frontend dependencies
        working-directory: ./apps/frontend/web
        run: npm ci

      - name: Run frontend tests (Placeholder)
        working-directory: ./apps/frontend/web
        run: echo "npm test" # Placeholder for Jest/Vitest

  build:
    name: Build Docker Images
    needs: test
    if: github.ref == 'refs/heads/main' # Only build on pushes to main
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub (Placeholder)
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push orders-service image (Placeholder)
        uses: docker/build-push-action@v5
        with:
          context: ./apps/backend/services/orders
          push: true
          tags: your-docker-repo/marketplace-orders-service:latest

  deploy:
    name: Deploy to Kubernetes
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to K8s (Placeholder)
        run: |
          echo "Setting up kubectl context..."
          echo "Running helm upgrade..."
          echo "Deployment successful!"
